
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "interfaceGameObject.sol";

// This is class that describes you smart contract.
contract GameObject is interfaceGameObject {

    uint public HP;
    address public AttackAddress;

    function getPowerOfProtection () public returns (uint){
        tvm.accept();
        return HP;
    }

    function getAttack (uint damage) external override {
        tvm.accept();
        HP -= damage;
        AttackAddress = msg.sender;
    }

    function checkAllive () private returns(bool) {
        tvm.accept();
        if (HP == 0) {
            return false;
            death();
        }
        else {
            return true;
        }
    }

    modifier checkOwnerAndAccept {
        require(msg.pubkey() == tvm.pubkey(), 103);
        tvm.accept();
        _;
    }
    
    
    function death() virtual public checkOwnerAndAccept {
        tvm.accept();
        Suicide();
    }

    function Suicide () private {
        tvm.accept();
        AttackAddress.transfer(1,true,160);
    }

    function addWarUnit (address addressWarUnit) virtual external {}
    function deleteWarUnit (address addressWarUnit) virtual external {}
}

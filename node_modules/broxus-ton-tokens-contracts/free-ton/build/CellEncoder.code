.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
ENDS
ACCEPT
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	encodeEthereumEventData
.public	encodeEthereumEventData
.type	encodeEthereumEventData, @function
; Decode input parameters
; Decode tokens
LDU 128
; Decode wid
LDI 8
; Decode owner_addr
LDU 256
; Decode owner_pubkey
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: tokens
;; param: wid
;; param: owner_addr
;; param: owner_pubkey
; function encodeEthereumEventData
;; ret param: data
NEWC
ENDC
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier tokens
PUSH S6
STUR 128
;; push identifier wid
PUSH S5
STIR 8
;; push identifier owner_addr
PUSH S4
STUR 256
;; push identifier owner_pubkey
PUSH S3
STUR 256
; colValue
NIP
; end colValue
;; push identifier builder
DUP
ENDC
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; returning named params
BLKSWAP 4, 2
BLKDROP 5
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa14ea6cf
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function encodeEthereumEventData
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	encodeEthereumEventData_internal
.type	encodeEthereumEventData_internal, @function
;; param: tokens
;; param: wid
;; param: owner_addr
;; param: owner_pubkey
; function encodeEthereumEventData
;; ret param: data
NEWC
ENDC
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier tokens
PUSH S6
STUR 128
;; push identifier wid
PUSH S5
STIR 8
;; push identifier owner_addr
PUSH S4
STUR 256
;; push identifier owner_pubkey
PUSH S3
STUR 256
; colValue
NIP
; end colValue
;; push identifier builder
DUP
ENDC
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; returning named params
BLKSWAP 4, 2
BLKDROP 5
; end function encodeEthereumEventData

.globl	decodeEthereumEventData
.public	decodeEthereumEventData
.type	decodeEthereumEventData, @function
; Decode input parameters
; Decode data
;; decode TvmCell
LDREF
ENDS
;; param: data
; function decodeEthereumEventData
;; ret param: tokens
PUSHINT 0
;; ret param: wid
PUSHINT 0
;; ret param: owner_addr
PUSHINT 0
;; ret param: owner_pubkey
PUSHINT 0
;; push identifier data
PUSH S4
CTOS
LDU 128
LDI 8
LDU 256
LDU 256
; colValue
DROP
REVERSE 4, 0
; expValue
; end expValue
; colValue
POP S7
; end colValue
; expValue
; end expValue
; colValue
POP S5
; end colValue
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
BLKSWAP 1, 4
DROP
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x8e5d1e02
	PUSH S5
	STUR 128
	PUSH S4
	STIR 8
	PUSH S3
	STUR 256
	PUSH S2
	STUR 256
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
BLKDROP 4
; end function decodeEthereumEventData
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	decodeEthereumEventData_internal
.type	decodeEthereumEventData_internal, @function
;; param: data
; function decodeEthereumEventData
;; ret param: tokens
PUSHINT 0
;; ret param: wid
PUSHINT 0
;; ret param: owner_addr
PUSHINT 0
;; ret param: owner_pubkey
PUSHINT 0
;; push identifier data
PUSH S4
CTOS
LDU 128
LDI 8
LDU 256
LDU 256
; colValue
DROP
REVERSE 4, 0
; expValue
; end expValue
; colValue
POP S7
; end colValue
; expValue
; end expValue
; colValue
POP S5
; end colValue
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
BLKSWAP 1, 4
DROP
; end function decodeEthereumEventData

.globl	encodeConfigurationMeta
.public	encodeConfigurationMeta
.type	encodeConfigurationMeta, @function
; Decode input parameters
; Decode rootToken
LDMSGADDR
ENDS
;; param: rootToken
; function encodeConfigurationMeta
;; ret param: data
NEWC
ENDC
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier rootToken
PUSH S3
STSLICER
; colValue
NIP
; end colValue
;; push identifier builder
DUP
ENDC
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; returning named params
ROT
DROP2
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x85315ebd
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function encodeConfigurationMeta
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	encodeConfigurationMeta_internal
.type	encodeConfigurationMeta_internal, @function
;; param: rootToken
; function encodeConfigurationMeta
;; ret param: data
NEWC
ENDC
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier rootToken
PUSH S3
STSLICER
; colValue
NIP
; end colValue
;; push identifier builder
DUP
ENDC
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; returning named params
ROT
DROP2
; end function encodeConfigurationMeta

.globl	decodeConfigurationMeta
.public	decodeConfigurationMeta
.type	decodeConfigurationMeta, @function
; Decode input parameters
; Decode data
;; decode TvmCell
LDREF
ENDS
;; param: data
; function decodeConfigurationMeta
;; ret param: rootToken
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; push identifier data
PUSH S1
CTOS
;; decode address
LDMSGADDR
; colValue
DROP
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
SWAP
DROP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa42a80c7
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function decodeConfigurationMeta
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	decodeConfigurationMeta_internal
.type	decodeConfigurationMeta_internal, @function
;; param: data
; function decodeConfigurationMeta
;; ret param: rootToken
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; push identifier data
PUSH S1
CTOS
;; decode address
LDMSGADDR
; colValue
DROP
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
SWAP
DROP
; end function decodeConfigurationMeta

.globl	encodeTonEventData
.public	encodeTonEventData
.type	encodeTonEventData, @function
; Decode input parameters
; Decode wid
LDI 8
; Decode addr
LDU 256
; Decode tokens
LDU 128
; Decode ethereum_address
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
ENDS
;; param: wid
;; param: addr
;; param: tokens
;; param: ethereum_address
; function encodeTonEventData
;; ret param: data
NEWC
ENDC
NEWC
;; decl: builder
PUSHINT 0
;; decl: zero_event_id
; expValue
PUSH S1
; end expValue
;; push identifier zero_event_id
PUSH S1
STUR 32
;; push identifier wid
PUSH S7
STIR 8
;; push identifier addr
PUSH S6
STUR 256
;; push identifier tokens
PUSH S5
STUR 128
;; push identifier ethereum_address
PUSH S4
STUR 160
; colValue
POP S2
; end colValue
;; push identifier builder
PUSH S1
ENDC
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; returning named params
BLKSWAP 4, 3
BLKDROP 6
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x922836c3
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function encodeTonEventData
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	encodeTonEventData_internal
.type	encodeTonEventData_internal, @function
;; param: wid
;; param: addr
;; param: tokens
;; param: ethereum_address
; function encodeTonEventData
;; ret param: data
NEWC
ENDC
NEWC
;; decl: builder
PUSHINT 0
;; decl: zero_event_id
; expValue
PUSH S1
; end expValue
;; push identifier zero_event_id
PUSH S1
STUR 32
;; push identifier wid
PUSH S7
STIR 8
;; push identifier addr
PUSH S6
STUR 256
;; push identifier tokens
PUSH S5
STUR 128
;; push identifier ethereum_address
PUSH S4
STUR 160
; colValue
POP S2
; end colValue
;; push identifier builder
PUSH S1
ENDC
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; returning named params
BLKSWAP 4, 3
BLKDROP 6
; end function encodeTonEventData

.globl	decodeTonEventData
.public	decodeTonEventData
.type	decodeTonEventData, @function
; Decode input parameters
; Decode data
;; decode TvmCell
LDREF
ENDS
;; param: data
; function decodeTonEventData
;; ret param: wid
PUSHINT 0
;; ret param: addr
PUSHINT 0
;; ret param: tokens
PUSHINT 0
;; ret param: ethereum_address
PUSHINT 0
;; push identifier data
PUSH S4
CTOS
LDU 32
LDI 8
LDU 256
LDU 128
LDU 160
; colValue
DROP
REVERSE 5, 0
DROP
; expValue
; end expValue
; colValue
POP S7
; end colValue
; expValue
; end expValue
; colValue
POP S5
; end colValue
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
BLKSWAP 1, 4
DROP
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xd152101a
	PUSH S4
	STIR 8
	PUSH S3
	STUR 256
	PUSH S2
	STUR 128
	PUSH S1
	STUR 160
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
BLKDROP 4
; end function decodeTonEventData
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	decodeTonEventData_internal
.type	decodeTonEventData_internal, @function
;; param: data
; function decodeTonEventData
;; ret param: wid
PUSHINT 0
;; ret param: addr
PUSHINT 0
;; ret param: tokens
PUSHINT 0
;; ret param: ethereum_address
PUSHINT 0
;; push identifier data
PUSH S4
CTOS
LDU 32
LDI 8
LDU 256
LDU 128
LDU 160
; colValue
DROP
REVERSE 5, 0
DROP
; expValue
; end expValue
; colValue
POP S7
; end colValue
; expValue
; end expValue
; colValue
POP S5
; end colValue
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
BLKSWAP 1, 4
DROP
; end function decodeTonEventData

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
SWAP
STU 16
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
PLDU 16
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	PLDU 16
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init _randomNonce
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 10
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF


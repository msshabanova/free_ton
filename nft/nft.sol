
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

// This is class that describes you smart contract.
contract nft {
    struct Book {
        string title;
        string authorName; 
        uint numberOfPages;  
    }

    Book [] books;
    mapping (uint=>uint) bookToOwner;
    mapping (uint=>uint) bookPrice;

    function addBook (string title, string authorName, uint numberOfPages) public {
        for (uint i = 0; i <= books.length - 1; i++) {
            require((title != books[i].title) && (authorName != books[i].authorName), 101);
        }
        tvm.accept();
        books.push(Book(title, authorName, numberOfPages));
        uint key = books.length - 1;
        bookToOwner[key] = msg.pubkey();
    }

    function getBookOwner (uint bookId) public view returns (uint) {
        return bookToOwner[bookId];
    }

    function getBookInfo (uint bookId) public view returns (string bookTitle, string bookAuthor, uint pagesNum) {
        bookTitle = books[bookId].title;
        bookAuthor = books[bookId].authorName; 
        pagesNum = books[bookId].numberOfPages;
    }
    modifier checkOwnerAndAccept(uint bookId) {
        require(msg.pubkey() == bookToOwner[bookId], 102);
        tvm.accept();
        _;
    }

    function putUpForSale (uint bookId, uint price) public checkOwnerAndAccept(bookId) returns(uint) {
        bookPrice[bookId] = price;
        return price;
    }

    function changePrice (uint bookId, uint newPrice) public checkOwnerAndAccept(bookId) {
        bookPrice[bookId] = newPrice;
    }
    function changeBookName (uint bookId, uint newBookOwner) public checkOwnerAndAccept(bookId) {
        bookToOwner[bookId] = newBookOwner;
    }

}

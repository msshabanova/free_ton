
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;
import "GameObject.sol";
import 'interfaceGameObject.sol';

// This is class that describes you smart contract.
contract WarUnit is GameObject {

    GameObject ThisAddressBasicStation;
    uint public attackPower;

    function attack(interfaceGameObject AttackAddress) internal checkOwnerAndAccept {
        AttackAddress.getAttack(attackPower);
    }

    function getPowerAttack () public checkOwnerAndAccept returns (uint) {
        tvm.accept();
        return attackPower;
    }
    
    function getProttectionPower () public checkOwnerAndAccept returns (uint){
        tvm.accept();
        return HP;
    }

    function deathWarUnit () internal checkOwnerAndAccept {
        death();
        address addressWarUnit = address(this);
        ThisAddressBasicStation.deleteWarUnit(addressWarUnit);
    }

    function deathBecauseOfBase () external {
        require(msg.sender == ThisAddressBasicStation, 102);
        tvm.accept();
        death();
    }

}

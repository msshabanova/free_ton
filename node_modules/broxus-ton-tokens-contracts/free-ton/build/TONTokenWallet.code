.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
ENDS
; constructor TONTokenWallet
;; push identifier error_define_wallet_public_key_or_owner_address
GETGLOB 28
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier wallet_public_key
GETGLOB 12
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; get member value
	;; push identifier owner_address
	GETGLOB 13
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	EQINT 0
}
IF
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier wallet_public_key
	GETGLOB 12
	EQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; get member value
		;; push identifier owner_address
		GETGLOB 13
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		NEQINT 0
	}
	IF
}
IFNOT
THROWANYIFNOT
ACCEPT
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHCONT {
	;; Remote call ITokenWalletDeployedCallback.notifyWalletDeployed
	;; push identifier owner_address
	GETGLOB 13
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x22710000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x4853bb37
	;; root
	;; push identifier root_address
	GETGLOB 10
	STSLICER
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
; end constructor TONTokenWallet
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	getDetails
.public	getDetails
.type	getDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getDetails
;; return
;; push identifier root_address
GETGLOB 10
;; push identifier code
GETGLOB 11
;; push identifier wallet_public_key
GETGLOB 12
;; push identifier owner_address
GETGLOB 13
;; push identifier balance
GETGLOB 14
TUPLE 5
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x943b7493
	PUSH S2
	UNTUPLE 5
	BLKSWAP 1, 5
	PUSH S5
	STSLICER
	PUSH S4
	STREFR
	PUSH S3
	STUR 256
	PUSH S2
	STSLICER
	PUSH S1
	STUR 128
	XCHG s5
	BLKDROP 5
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	accept
.public	accept
.type	accept, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: tokens
; modifier onlyRoot
;; push identifier error_message_sender_is_not_my_root
GETGLOB 19
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isRoot
;; return
;; push identifier root_address
GETGLOB 10
;; get member sender
GETGLOB 9
SDEQ
; end function isRoot
THROWANYIFNOT
; function accept
;; push identifier tokens
DUP
; expValue
;; fetch balance
GETGLOB 14
; end expValue
SWAP
ADD
UFITS 128
; colValue
SETGLOB 14
; end colValue
; end function accept
DROP
; end modifier onlyRoot
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	allowance
.public	allowance
.type	allowance, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function allowance
;; return
;; push identifier allowance_
GETGLOB 15
ISNULL
NOT
PUSHCONT {
	;; push identifier allowance_
	GETGLOB 15
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHINT 0
	;; address.makeAddrStd()
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 2
}
IFELSE
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xaf8570e6
	PUSH S1
	UNTUPLE 2
	ROT
	PUSH S2
	STUR 128
	PUSH S1
	STSLICER
	NIP
	NIP
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function allowance
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	approve
.public	approve
.type	approve, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode spender
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode remaining_tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: spender
;; param: remaining_tokens
;; param: tokens
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function approve
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	PUSHINT 2
	RAWRESERVE
}
PUSHCONT {
	ACCEPT
}
IFELSE
;; end if
;; if
;; push identifier allowance_
GETGLOB 15
ISNULL
NOT
PUSHCONT {
	;; if
	;; get member remaining_tokens
	;; push identifier allowance_
	GETGLOB 15
	DUP
	ISNULL
	THROWIF 63
	INDEX 0
	;; push identifier remaining_tokens
	PUSH S2
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		; end expValue
		;; push identifier tokens
		DUP
		;; push identifier spender
		PUSH S3
		TUPLE 2
		; colValue
		SETGLOB 15
		; end colValue
	}
	IF
	;; end if
}
PUSHCONT {
	;; push identifier error_non_zero_remaining
	GETGLOB 23
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; push identifier remaining_tokens
	PUSH S2
	EQINT 0
	THROWANYIFNOT
	; expValue
	; end expValue
	;; push identifier tokens
	DUP
	;; push identifier spender
	PUSH S3
	TUPLE 2
	; colValue
	SETGLOB 15
	; end colValue
}
IFELSE
;; end if
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHCONT {
	;; transfer()
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
IF
;; end if
; end function approve
BLKDROP 3
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	disapprove
.public	disapprove
.type	disapprove, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function disapprove
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	PUSHINT 2
	RAWRESERVE
}
PUSHCONT {
	ACCEPT
}
IFELSE
;; end if
; expValue
; end expValue
NULL
; colValue
SETGLOB 15
; end colValue
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHCONT {
	;; transfer()
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
IF
;; end if
; end function disapprove
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	transferToRecipient
.public	transferToRecipient
.type	transferToRecipient, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode recipient_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode recipient_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode deploy_grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode transfer_grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: recipient_public_key
;; param: recipient_address
;; param: tokens
;; param: deploy_grams
;; param: transfer_grams
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function transferToRecipient
NEWC
;; decl: builder
;; push identifier recipient_public_key
PUSH S5
;; push identifier recipient_address
PUSH S5
;; push identifier tokens
PUSH S5
;; push identifier deploy_grams
PUSH S5
;; push identifier transfer_grams
PUSH S5
FALSE
;; push identifier builder
PUSH S6
ENDC
;; param: recipient_public_key
;; param: recipient_address
;; param: tokens
;; param: deploy_grams
;; param: transfer_grams
;; param: notify_receiver
;; param: payload
; function _transferToRecipient
;; push identifier tokens
PUSH S4
GTINT 0
THROWIFNOT 100
;; push identifier error_not_enough_balance
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier tokens
PUSH S5
;; push identifier balance
GETGLOB 14
;; <=
LEQ
THROWANYIFNOT
;; push identifier error_define_wallet_public_key_or_owner_address
GETGLOB 28
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member value
;; push identifier recipient_address
PUSH S6
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier recipient_public_key
	PUSH S7
	EQINT 0
}
IF
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; get member value
	;; push identifier recipient_address
	PUSH S6
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	EQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier recipient_public_key
		PUSH S7
		NEQINT 0
	}
	IF
}
IFNOT
THROWANYIFNOT
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	;; decl: reserve
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier reserve
	PUSH S2
	;; push identifier target_gas_balance
	GETGLOB 29
	;; +
	ADD
	UFITS 128
	;; push identifier deploy_grams
	PUSH S7
	;; +
	ADD
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier reserve
	DUP
	PUSHINT 2
	RAWRESERVE
	DROP
}
PUSHCONT {
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier deploy_grams
	PUSH S5
	;; push identifier transfer_grams
	PUSH S5
	;; +
	ADD
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; push identifier transfer_grams
	PUSH S3
	;; push identifier target_gas_balance
	GETGLOB 29
	;; >
	GREATER
	THROWANYIFNOT
	ACCEPT
}
IFELSE
;; end if
NEWDICT
;; push identifier recipient_public_key
PUSH S7
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root_address
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier code
GETGLOB 11
PUSHINT 2
ROT
PUSHINT 64
DICTUSETREF
;; push identifier recipient_public_key
PUSH S7
NEWC
STU 256
PUSHINT 3
ROT
PUSHINT 64
DICTUSETB
;; push identifier recipient_address
PUSH S6
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
;; push identifier code
GETGLOB 11
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
;; decl: stateInit
;; push identifier stateInit
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: to
;; if
;; push identifier deploy_grams
PUSH S5
GTINT 0
PUSHCONT {
	;; push identifier stateInit
	PUSH S1
	DUP
	HASHCU
	;; get member wid
	MYADDR
	PARSEMSGADDR
	INDEX 2
	NEWC
	STSLICECONST x9_
	STI 8
	STU 256
	ENDC
	CTOS
	;; push identifier deploy_grams
	PUSH S7
	PUSH S1
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 105
	STZEROES
	STSLICECONST xc_
	STSLICECONST 1
	PUSH S2
	STREFR
	STSLICECONST 1
	NEWC
	STSLICECONST x68b55f3f
	ENDC
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	NIP
	DROP
}
IF
;; end if
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier tokens
	PUSH S6
	; expValue
	;; fetch balance
	GETGLOB 14
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 14
	; end colValue
	;; Remote call ITONTokenWallet.internalTransfer
	;; push identifier to
	DUP
	TRUE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x18d21702
	;; tokens
	;; push identifier tokens
	PUSH S8
	STUR 128
	;; sender_public_key
	;; push identifier wallet_public_key
	GETGLOB 12
	STUR 256
	;; sender_address
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; send_gas_to
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S5
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S4
	STREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
PUSHCONT {
	;; push identifier tokens
	PUSH S6
	; expValue
	;; fetch balance
	GETGLOB 14
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 14
	; end colValue
	;; Remote call ITONTokenWallet.internalTransfer
	;; push identifier transfer_grams
	PUSH S4
	;; push identifier to
	PUSH S1
	TRUE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 105
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x18d21702
	;; tokens
	;; push identifier tokens
	PUSH S8
	STUR 128
	;; sender_public_key
	;; push identifier wallet_public_key
	GETGLOB 12
	STUR 256
	;; sender_address
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; send_gas_to
	MYADDR
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S5
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S4
	STREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IFELSE
;; end if
BLKDROP 9
; end function _transferToRecipient
DROP
; end function transferToRecipient
BLKDROP 5
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	transferToRecipientWithNotify
.public	transferToRecipientWithNotify
.type	transferToRecipientWithNotify, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode recipient_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode recipient_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode deploy_grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode transfer_grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode payload
;; decode TvmCell
LDREF
ENDS
;; param: recipient_public_key
;; param: recipient_address
;; param: tokens
;; param: deploy_grams
;; param: transfer_grams
;; param: payload
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function transferToRecipientWithNotify
;; push identifier recipient_public_key
PUSH S5
;; push identifier recipient_address
PUSH S5
;; push identifier tokens
PUSH S5
;; push identifier deploy_grams
PUSH S5
;; push identifier transfer_grams
PUSH S5
TRUE
;; push identifier payload
PUSH S6
;; param: recipient_public_key
;; param: recipient_address
;; param: tokens
;; param: deploy_grams
;; param: transfer_grams
;; param: notify_receiver
;; param: payload
; function _transferToRecipient
;; push identifier tokens
PUSH S4
GTINT 0
THROWIFNOT 100
;; push identifier error_not_enough_balance
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier tokens
PUSH S5
;; push identifier balance
GETGLOB 14
;; <=
LEQ
THROWANYIFNOT
;; push identifier error_define_wallet_public_key_or_owner_address
GETGLOB 28
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member value
;; push identifier recipient_address
PUSH S6
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier recipient_public_key
	PUSH S7
	EQINT 0
}
IF
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; get member value
	;; push identifier recipient_address
	PUSH S6
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	EQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier recipient_public_key
		PUSH S7
		NEQINT 0
	}
	IF
}
IFNOT
THROWANYIFNOT
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	;; decl: reserve
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier reserve
	PUSH S2
	;; push identifier target_gas_balance
	GETGLOB 29
	;; +
	ADD
	UFITS 128
	;; push identifier deploy_grams
	PUSH S7
	;; +
	ADD
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier reserve
	DUP
	PUSHINT 2
	RAWRESERVE
	DROP
}
PUSHCONT {
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier deploy_grams
	PUSH S5
	;; push identifier transfer_grams
	PUSH S5
	;; +
	ADD
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; push identifier transfer_grams
	PUSH S3
	;; push identifier target_gas_balance
	GETGLOB 29
	;; >
	GREATER
	THROWANYIFNOT
	ACCEPT
}
IFELSE
;; end if
NEWDICT
;; push identifier recipient_public_key
PUSH S7
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root_address
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier code
GETGLOB 11
PUSHINT 2
ROT
PUSHINT 64
DICTUSETREF
;; push identifier recipient_public_key
PUSH S7
NEWC
STU 256
PUSHINT 3
ROT
PUSHINT 64
DICTUSETB
;; push identifier recipient_address
PUSH S6
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
;; push identifier code
GETGLOB 11
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
;; decl: stateInit
;; push identifier stateInit
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: to
;; if
;; push identifier deploy_grams
PUSH S5
GTINT 0
PUSHCONT {
	;; push identifier stateInit
	PUSH S1
	DUP
	HASHCU
	;; get member wid
	MYADDR
	PARSEMSGADDR
	INDEX 2
	NEWC
	STSLICECONST x9_
	STI 8
	STU 256
	ENDC
	CTOS
	;; push identifier deploy_grams
	PUSH S7
	PUSH S1
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 105
	STZEROES
	STSLICECONST xc_
	STSLICECONST 1
	PUSH S2
	STREFR
	STSLICECONST 1
	NEWC
	STSLICECONST x68b55f3f
	ENDC
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	NIP
	DROP
}
IF
;; end if
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier tokens
	PUSH S6
	; expValue
	;; fetch balance
	GETGLOB 14
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 14
	; end colValue
	;; Remote call ITONTokenWallet.internalTransfer
	;; push identifier to
	DUP
	TRUE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x18d21702
	;; tokens
	;; push identifier tokens
	PUSH S8
	STUR 128
	;; sender_public_key
	;; push identifier wallet_public_key
	GETGLOB 12
	STUR 256
	;; sender_address
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; send_gas_to
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S5
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S4
	STREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
PUSHCONT {
	;; push identifier tokens
	PUSH S6
	; expValue
	;; fetch balance
	GETGLOB 14
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 14
	; end colValue
	;; Remote call ITONTokenWallet.internalTransfer
	;; push identifier transfer_grams
	PUSH S4
	;; push identifier to
	PUSH S1
	TRUE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 105
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x18d21702
	;; tokens
	;; push identifier tokens
	PUSH S8
	STUR 128
	;; sender_public_key
	;; push identifier wallet_public_key
	GETGLOB 12
	STUR 256
	;; sender_address
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; send_gas_to
	MYADDR
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S5
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S4
	STREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IFELSE
;; end if
BLKDROP 9
; end function _transferToRecipient
; end function transferToRecipientWithNotify
BLKDROP 6
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	transfer
.public	transfer
.type	transfer, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: to
;; param: tokens
;; param: grams
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function transfer
NEWC
;; decl: builder
;; push identifier to
PUSH S3
;; push identifier tokens
PUSH S3
;; push identifier grams
PUSH S3
FALSE
;; push identifier builder
PUSH S4
ENDC
;; param: to
;; param: tokens
;; param: grams
;; param: notify_receiver
;; param: payload
; function _transfer
;; push identifier tokens
PUSH S3
GTINT 0
THROWIFNOT 100
;; push identifier error_not_enough_balance
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier tokens
PUSH S4
;; push identifier balance
GETGLOB 14
;; <=
LEQ
THROWANYIFNOT
;; get member value
;; push identifier to
PUSH S4
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
THROWIFNOT 100
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	;; decl: reserve
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier reserve
	PUSH S2
	;; push identifier target_gas_balance
	GETGLOB 29
	;; +
	ADD
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier reserve
	DUP
	PUSHINT 2
	RAWRESERVE
	;; push identifier tokens
	PUSH S4
	; expValue
	;; fetch balance
	GETGLOB 14
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 14
	; end colValue
	;; Remote call ITONTokenWallet.internalTransfer
	;; push identifier to
	PUSH S5
	TRUE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x18d21702
	;; tokens
	;; push identifier tokens
	PUSH S6
	STUR 128
	;; sender_public_key
	;; push identifier wallet_public_key
	GETGLOB 12
	STUR 256
	;; sender_address
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; send_gas_to
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S4
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S3
	STREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
	DROP
}
PUSHCONT {
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier grams
	PUSH S4
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; push identifier grams
	PUSH S3
	;; push identifier target_gas_balance
	GETGLOB 29
	;; >
	GREATER
	THROWANYIFNOT
	ACCEPT
	;; push identifier tokens
	PUSH S3
	; expValue
	;; fetch balance
	GETGLOB 14
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 14
	; end colValue
	;; Remote call ITONTokenWallet.internalTransfer
	;; push identifier grams
	PUSH S2
	;; push identifier to
	PUSH S5
	TRUE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 105
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x18d21702
	;; tokens
	;; push identifier tokens
	PUSH S5
	STUR 128
	;; sender_public_key
	;; push identifier wallet_public_key
	GETGLOB 12
	STUR 256
	;; sender_address
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; send_gas_to
	MYADDR
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S3
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S2
	STREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IFELSE
;; end if
BLKDROP 5
; end function _transfer
DROP
; end function transfer
BLKDROP 3
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	transferWithNotify
.public	transferWithNotify
.type	transferWithNotify, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode payload
;; decode TvmCell
LDREF
ENDS
;; param: to
;; param: tokens
;; param: grams
;; param: payload
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function transferWithNotify
;; push identifier to
PUSH S3
;; push identifier tokens
PUSH S3
;; push identifier grams
PUSH S3
TRUE
;; push identifier payload
PUSH S4
;; param: to
;; param: tokens
;; param: grams
;; param: notify_receiver
;; param: payload
; function _transfer
;; push identifier tokens
PUSH S3
GTINT 0
THROWIFNOT 100
;; push identifier error_not_enough_balance
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier tokens
PUSH S4
;; push identifier balance
GETGLOB 14
;; <=
LEQ
THROWANYIFNOT
;; get member value
;; push identifier to
PUSH S4
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
THROWIFNOT 100
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	;; decl: reserve
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier reserve
	PUSH S2
	;; push identifier target_gas_balance
	GETGLOB 29
	;; +
	ADD
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier reserve
	DUP
	PUSHINT 2
	RAWRESERVE
	;; push identifier tokens
	PUSH S4
	; expValue
	;; fetch balance
	GETGLOB 14
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 14
	; end colValue
	;; Remote call ITONTokenWallet.internalTransfer
	;; push identifier to
	PUSH S5
	TRUE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x18d21702
	;; tokens
	;; push identifier tokens
	PUSH S6
	STUR 128
	;; sender_public_key
	;; push identifier wallet_public_key
	GETGLOB 12
	STUR 256
	;; sender_address
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; send_gas_to
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S4
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S3
	STREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
	DROP
}
PUSHCONT {
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier grams
	PUSH S4
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; push identifier grams
	PUSH S3
	;; push identifier target_gas_balance
	GETGLOB 29
	;; >
	GREATER
	THROWANYIFNOT
	ACCEPT
	;; push identifier tokens
	PUSH S3
	; expValue
	;; fetch balance
	GETGLOB 14
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 14
	; end colValue
	;; Remote call ITONTokenWallet.internalTransfer
	;; push identifier grams
	PUSH S2
	;; push identifier to
	PUSH S5
	TRUE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 105
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x18d21702
	;; tokens
	;; push identifier tokens
	PUSH S5
	STUR 128
	;; sender_public_key
	;; push identifier wallet_public_key
	GETGLOB 12
	STUR 256
	;; sender_address
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; send_gas_to
	MYADDR
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S3
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S2
	STREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IFELSE
;; end if
BLKDROP 5
; end function _transfer
; end function transferWithNotify
BLKDROP 4
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	transferFrom
.public	transferFrom
.type	transferFrom, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode from
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: from
;; param: to
;; param: tokens
;; param: grams
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function transferFrom
NEWC
;; decl: builder
;; push identifier from
PUSH S4
;; push identifier to
PUSH S4
;; push identifier tokens
PUSH S4
;; push identifier grams
PUSH S4
FALSE
;; push identifier builder
PUSH S5
ENDC
;; param: from
;; param: to
;; param: tokens
;; param: grams
;; param: notify_receiver
;; param: payload
; function _transferFrom
;; get member value
;; push identifier to
PUSH S4
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
THROWIFNOT 100
;; push identifier tokens
PUSH S3
GTINT 0
THROWIFNOT 100
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	;; decl: reserve
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier reserve
	PUSH S2
	;; push identifier target_gas_balance
	GETGLOB 29
	PUSHINT 2
	;; *
	MUL
	UFITS 128
	;; +
	ADD
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier reserve
	DUP
	PUSHINT 2
	RAWRESERVE
	;; Remote call ITONTokenWallet.internalTransferFrom
	;; push identifier from
	PUSH S6
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x3f567951
	;; to
	;; push identifier to
	PUSH S7
	STSLICER
	;; tokens
	;; push identifier tokens
	PUSH S6
	STUR 128
	;; send_gas_to
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S4
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S3
	STREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
	DROP
}
PUSHCONT {
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier grams
	PUSH S4
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; push identifier grams
	PUSH S3
	;; push identifier target_gas_balance
	GETGLOB 29
	PUSHINT 2
	;; *
	MUL
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	ACCEPT
	;; Remote call ITONTokenWallet.internalTransferFrom
	;; push identifier grams
	PUSH S2
	;; push identifier from
	PUSH S6
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 105
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x3f567951
	;; to
	;; push identifier to
	PUSH S6
	STSLICER
	;; tokens
	;; push identifier tokens
	PUSH S5
	STUR 128
	;; send_gas_to
	MYADDR
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S3
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S2
	STREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IFELSE
;; end if
BLKDROP 6
; end function _transferFrom
DROP
; end function transferFrom
BLKDROP 4
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	transferFromWithNotify
.public	transferFromWithNotify
.type	transferFromWithNotify, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode from
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode payload
;; decode TvmCell
LDREF
ENDS
;; param: from
;; param: to
;; param: tokens
;; param: grams
;; param: payload
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function transferFromWithNotify
;; push identifier from
PUSH S4
;; push identifier to
PUSH S4
;; push identifier tokens
PUSH S4
;; push identifier grams
PUSH S4
TRUE
;; push identifier payload
PUSH S5
;; param: from
;; param: to
;; param: tokens
;; param: grams
;; param: notify_receiver
;; param: payload
; function _transferFrom
;; get member value
;; push identifier to
PUSH S4
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
THROWIFNOT 100
;; push identifier tokens
PUSH S3
GTINT 0
THROWIFNOT 100
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	;; decl: reserve
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier reserve
	PUSH S2
	;; push identifier target_gas_balance
	GETGLOB 29
	PUSHINT 2
	;; *
	MUL
	UFITS 128
	;; +
	ADD
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier reserve
	DUP
	PUSHINT 2
	RAWRESERVE
	;; Remote call ITONTokenWallet.internalTransferFrom
	;; push identifier from
	PUSH S6
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x3f567951
	;; to
	;; push identifier to
	PUSH S7
	STSLICER
	;; tokens
	;; push identifier tokens
	PUSH S6
	STUR 128
	;; send_gas_to
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S4
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S3
	STREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
	DROP
}
PUSHCONT {
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier grams
	PUSH S4
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; push identifier grams
	PUSH S3
	;; push identifier target_gas_balance
	GETGLOB 29
	PUSHINT 2
	;; *
	MUL
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	ACCEPT
	;; Remote call ITONTokenWallet.internalTransferFrom
	;; push identifier grams
	PUSH S2
	;; push identifier from
	PUSH S6
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 105
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x3f567951
	;; to
	;; push identifier to
	PUSH S6
	STSLICER
	;; tokens
	;; push identifier tokens
	PUSH S5
	STUR 128
	;; send_gas_to
	MYADDR
	STSLICER
	;; notify_receiver
	;; push identifier notify_receiver
	PUSH S3
	STIR 1
	;; payload
	;; push identifier payload
	PUSH S2
	STREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IFELSE
;; end if
BLKDROP 6
; end function _transferFrom
; end function transferFromWithNotify
BLKDROP 5
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	internalTransfer
.public	internalTransfer
.type	internalTransfer, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode sender_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode sender_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode notify_receiver
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
; Decode payload
;; decode TvmCell
LDREF
ENDS
;; param: tokens
;; param: sender_public_key
;; param: sender_address
;; param: send_gas_to
;; param: notify_receiver
;; param: payload
; function internalTransfer
;; push identifier sender_public_key
PUSH S4
;; push identifier sender_address
PUSH S4
;; param: wallet_public_key_
;; param: owner_address_
; function getExpectedAddress
NEWDICT
;; push identifier wallet_public_key_
PUSH S2
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root_address
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier code
GETGLOB 11
PUSHINT 2
ROT
PUSHINT 64
DICTUSETREF
;; push identifier wallet_public_key_
PUSH S2
NEWC
STU 256
PUSHINT 3
ROT
PUSHINT 64
DICTUSETB
;; push identifier owner_address_
PUSH S1
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
;; push identifier code
GETGLOB 11
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
;; decl: stateInit
;; return
;; push identifier stateInit
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
XCHG s3
BLKDROP 3
; end function getExpectedAddress
;; decl: expectedSenderAddress
;; push identifier error_message_sender_is_not_good_wallet
GETGLOB 20
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member sender
GETGLOB 9
;; push identifier expectedSenderAddress
PUSH S2
SDEQ
THROWANYIFNOT
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	;; decl: reserve
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier reserve
	PUSH S2
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier reserve
	DUP
	PUSHINT 2
	RAWRESERVE
	DROP
}
PUSHCONT {
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	PUSHINT 2
	RAWRESERVE
}
IFELSE
;; end if
;; push identifier tokens
PUSH S6
; expValue
;; fetch balance
GETGLOB 14
; end expValue
SWAP
ADD
UFITS 128
; colValue
SETGLOB 14
; end colValue
;; if
;; push identifier notify_receiver
PUSH S2
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; get member value
	;; push identifier receive_callback
	GETGLOB 16
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
}
IF
PUSHCONT {
	;; Remote call ITokensReceivedCallback.tokensReceivedCallback
	;; push identifier receive_callback
	GETGLOB 16
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x59411fb9
	;; token_wallet
	MYADDR
	STSLICER
	;; token_root
	;; push identifier root_address
	GETGLOB 10
	STSLICER
	;; amount
	;; push identifier tokens
	PUSH S8
	STUR 128
	;; sender_public_key
	;; push identifier sender_public_key
	PUSH S7
	STUR 256
	NEWC
	;; sender_address
	;; push identifier sender_address
	PUSH S7
	STSLICER
	;; sender_wallet
	;; get member sender
	GETGLOB 9
	STSLICER
	;; original_gas_to
	;; push identifier send_gas_to
	PUSH S6
	STSLICER
	NEWC
	;; updated_balance
	;; push identifier balance
	GETGLOB 14
	STUR 128
	;; payload
	;; push identifier payload
	PUSH S5
	STREFR
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
PUSHCONT {
	;; transfer()
	;; push identifier send_gas_to
	PUSH S3
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
IFELSE
;; end if
BLKDROP 7
; end function internalTransfer
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	internalTransferFrom
.public	internalTransferFrom
.type	internalTransferFrom, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode notify_receiver
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
; Decode payload
;; decode TvmCell
LDREF
ENDS
;; param: to
;; param: tokens
;; param: send_gas_to
;; param: notify_receiver
;; param: payload
; function internalTransferFrom
;; push identifier error_no_allowance_set
GETGLOB 24
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier allowance_
GETGLOB 15
ISNULL
NOT
THROWANYIFNOT
;; push identifier error_wrong_spender
GETGLOB 25
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member sender
GETGLOB 9
;; get member spender
;; push identifier allowance_
GETGLOB 15
DUP
ISNULL
THROWIF 63
INDEX 1
SDEQ
THROWANYIFNOT
;; push identifier error_not_enough_allowance
GETGLOB 26
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier tokens
PUSH S4
;; get member remaining_tokens
;; push identifier allowance_
GETGLOB 15
DUP
ISNULL
THROWIF 63
INDEX 0
;; <=
LEQ
THROWANYIFNOT
;; push identifier error_not_enough_balance
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier tokens
PUSH S4
;; push identifier balance
GETGLOB 14
;; <=
LEQ
THROWANYIFNOT
;; push identifier tokens
PUSH S3
GTINT 0
THROWIFNOT 100
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	;; decl: reserve
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; push identifier reserve
	PUSH S2
	;; push identifier target_gas_balance
	GETGLOB 29
	;; +
	ADD
	UFITS 128
	;; >
	GREATER
	THROWANYIFNOT
	;; push identifier reserve
	DUP
	PUSHINT 2
	RAWRESERVE
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	PUSHINT 2
	RAWRESERVE
	DROP
}
PUSHCONT {
	;; push identifier error_low_message_value
	GETGLOB 27
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; get member value
	CALL $message_balance_macro$
	;; push identifier target_gas_balance
	GETGLOB 29
	;; >
	GREATER
	THROWANYIFNOT
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	PUSHINT 2
	RAWRESERVE
}
IFELSE
;; end if
;; push identifier tokens
PUSH S3
; expValue
;; fetch balance
GETGLOB 14
; end expValue
SWAP
SUB
UFITS 128
; colValue
SETGLOB 14
; end colValue
; expValue
; end expValue
;; get member remaining_tokens
;; push identifier allowance_
GETGLOB 15
DUP
ISNULL
THROWIF 63
INDEX 0
;; push identifier tokens
PUSH S4
;; -
SUB
UFITS 128
;; get member spender
;; push identifier allowance_
GETGLOB 15
DUP
ISNULL
THROWIF 63
INDEX 1
TUPLE 2
; colValue
SETGLOB 15
; end colValue
;; Remote call ITONTokenWallet.internalTransfer
;; push identifier to
PUSH S4
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x18d21702
;; tokens
;; push identifier tokens
PUSH S5
STUR 128
;; sender_public_key
;; push identifier wallet_public_key
GETGLOB 12
STUR 256
;; sender_address
;; push identifier owner_address
GETGLOB 13
STSLICER
;; send_gas_to
;; push identifier send_gas_to
PUSH S4
STSLICER
;; notify_receiver
;; push identifier notify_receiver
PUSH S3
STIR 1
;; payload
;; push identifier payload
PUSH S2
STREFR
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
BLKDROP 5
; end function internalTransferFrom
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	burnByOwner
.public	burnByOwner
.type	burnByOwner, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode callback_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode callback_payload
;; decode TvmCell
LDREF
ENDS
;; param: tokens
;; param: grams
;; param: callback_address
;; param: callback_payload
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function burnByOwner
;; push identifier tokens
PUSH S3
GTINT 0
THROWIFNOT 100
;; push identifier error_not_enough_balance
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier tokens
PUSH S4
;; push identifier balance
GETGLOB 14
;; <=
LEQ
THROWANYIFNOT
;; push identifier error_low_message_value
GETGLOB 27
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; get member value
	CALL $message_balance_macro$
	GTINT 0
}
IF
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; get member value
	;; push identifier owner_address
	GETGLOB 13
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	EQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier grams
		PUSH S3
		;; get member balance
		GETPARAM 7
		INDEX 0
		;; <=
		LEQ
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; push identifier grams
			PUSH S3
			GTINT 0
		}
		IF
	}
	IF
}
IFNOT
THROWANYIFNOT
;; if
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
PUSHCONT {
	;; push identifier target_gas_balance
	GETGLOB 29
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; get member value
	CALL $message_balance_macro$
	;; -
	SUB
	UFITS 128
	MAX
	PUSHINT 2
	RAWRESERVE
	;; push identifier tokens
	PUSH S3
	; expValue
	;; fetch balance
	GETGLOB 14
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 14
	; end colValue
	;; Remote call IBurnableTokenRootContract.tokensBurned
	;; push identifier root_address
	GETGLOB 10
	TRUE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x32501101
	;; tokens
	;; push identifier tokens
	PUSH S5
	STUR 128
	;; sender_public_key
	;; push identifier wallet_public_key
	GETGLOB 12
	STUR 256
	;; sender_address
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; callback_address
	;; push identifier callback_address
	PUSH S3
	STSLICER
	;; callback_payload
	;; push identifier callback_payload
	PUSH S2
	STREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
PUSHCONT {
	ACCEPT
	;; push identifier tokens
	PUSH S3
	; expValue
	;; fetch balance
	GETGLOB 14
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 14
	; end colValue
	;; Remote call IBurnableTokenRootContract.tokensBurned
	;; push identifier grams
	PUSH S2
	;; push identifier root_address
	GETGLOB 10
	TRUE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 105
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x32501101
	;; tokens
	;; push identifier tokens
	PUSH S5
	STUR 128
	;; sender_public_key
	;; push identifier wallet_public_key
	GETGLOB 12
	STUR 256
	;; sender_address
	;; push identifier owner_address
	GETGLOB 13
	STSLICER
	;; callback_address
	;; push identifier callback_address
	PUSH S3
	STSLICER
	;; callback_payload
	;; push identifier callback_payload
	PUSH S2
	STREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IFELSE
;; end if
; end function burnByOwner
BLKDROP 4
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	burnByRoot
.public	burnByRoot
.type	burnByRoot, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode callback_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode callback_payload
;; decode TvmCell
LDREF
ENDS
;; param: tokens
;; param: callback_address
;; param: callback_payload
; modifier onlyRoot
;; push identifier error_message_sender_is_not_my_root
GETGLOB 19
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isRoot
;; return
;; push identifier root_address
GETGLOB 10
;; get member sender
GETGLOB 9
SDEQ
; end function isRoot
THROWANYIFNOT
; function burnByRoot
;; push identifier tokens
PUSH S2
GTINT 0
THROWIFNOT 100
;; push identifier error_not_enough_balance
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier tokens
PUSH S3
;; push identifier balance
GETGLOB 14
;; <=
LEQ
THROWANYIFNOT
;; get member balance
GETPARAM 7
INDEX 0
;; get member value
CALL $message_balance_macro$
;; -
SUB
UFITS 128
PUSHINT 2
RAWRESERVE
;; push identifier tokens
PUSH S2
; expValue
;; fetch balance
GETGLOB 14
; end expValue
SWAP
SUB
UFITS 128
; colValue
SETGLOB 14
; end colValue
;; Remote call IBurnableTokenRootContract.tokensBurned
;; push identifier root_address
GETGLOB 10
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x32501101
;; tokens
;; push identifier tokens
PUSH S4
STUR 128
;; sender_public_key
;; push identifier wallet_public_key
GETGLOB 12
STUR 256
;; sender_address
;; push identifier owner_address
GETGLOB 13
STSLICER
;; callback_address
;; push identifier callback_address
PUSH S3
STSLICER
;; callback_payload
;; push identifier callback_payload
PUSH S2
STREFR
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
; end function burnByRoot
BLKDROP 3
; end modifier onlyRoot
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	setReceiveCallback
.public	setReceiveCallback
.type	setReceiveCallback, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode receive_callback_
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: receive_callback_
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function setReceiveCallback
ACCEPT
; expValue
; end expValue
;; push identifier receive_callback_
DUP
; colValue
SETGLOB 16
; end colValue
; end function setReceiveCallback
DROP
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	destroy
.public	destroy
.type	destroy, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode gas_dest
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: gas_dest
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function destroy
;; push identifier balance
GETGLOB 14
EQINT 0
THROWIFNOT 100
ACCEPT
;; push identifier gas_dest
DUP
NEWC
STSLICECONST x42_
STSLICE
PUSHSLICE x203e8000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 160
SENDRAWMSG
; end function destroy
DROP
; end modifier onlyOwner
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	destroy_internal
.type	destroy_internal, @function
;; param: gas_dest
; modifier onlyOwner
;; push identifier error_message_sender_is_not_my_owner
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; function isOwner
;; return
; function isInternalOwner
;; return
;; get member value
;; push identifier owner_address
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	GETGLOB 13
	;; get member sender
	GETGLOB 9
	SDEQ
}
IF
; end function isInternalOwner
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	; function isExternalOwner
	;; return
	;; push identifier wallet_public_key
	GETGLOB 12
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier wallet_public_key
		GETGLOB 12
		GETGLOB 5
		DUP
		ISNULL
		PUSHCONT {
			DROP
			PUSHINT 0
		}
		IF
		;; ==
		EQUAL
	}
	IF
	; end function isExternalOwner
}
IFNOT
; end function isOwner
THROWANYIFNOT
; function destroy
;; push identifier balance
GETGLOB 14
EQINT 0
THROWIFNOT 100
ACCEPT
;; push identifier gas_dest
DUP
NEWC
STSLICECONST x42_
STSLICE
PUSHSLICE x203e8000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 160
SENDRAWMSG
; end function destroy
DROP
; end modifier onlyOwner

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 13
GETGLOB 16
GETGLOB 18
GETGLOB 19
GETGLOB 20
GETGLOB 21
GETGLOB 22
GETGLOB 23
GETGLOB 24
GETGLOB 25
GETGLOB 26
GETGLOB 27
GETGLOB 28
GETGLOB 29
REVERSE 15, 0
STSLICE
STSLICE
STU 8
STU 8
STU 8
STU 8
STU 8
STU 8
STU 8
STU 8
STU 8
STU 8
STU 8
STU 128
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 14
GETGLOB 15
GETGLOB 17
REVERSE 8, 0
STBREF
STSLICE
STREF
STU 256
STU 128
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	SWAP
	UNTUPLE 2
	NEWC
	PUSH S2
	STUR 128
	PUSH S1
	STSLICER
	NIP
	NIP
	STBR
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
STU 8
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDMSGADDR
LDMSGADDR
LDU 8
LDU 8
LDU 8
LDU 8
LDU 8
LDU 8
LDU 8
LDU 8
LDU 8
LDU 8
LDU 8
PLDU 128
SETGLOB 29
SETGLOB 28
SETGLOB 27
SETGLOB 26
SETGLOB 25
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 16
SETGLOB 13
LDMSGADDR
LDREF
LDU 256
LDU 128
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	LDU 128
	TUPLE 2
}
IFNOT
SETGLOB 15
PLDU 8
SETGLOB 17
SETGLOB 14
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDMSGADDR
	LDMSGADDR
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	PLDU 128
	SETGLOB 29
	SETGLOB 28
	SETGLOB 27
	SETGLOB 26
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 16
	SETGLOB 13
	LDMSGADDR
	LDREF
	LDU 256
	LDU 128
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		LDU 128
		TUPLE 2
	}
	IFNOT
	SETGLOB 15
	PLDU 8
	SETGLOB 17
	SETGLOB 14
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init root_address
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	IFNOT
	SETGLOB 10
	; init code
	PUSHINT 2
	PUSH S1
	PUSHINT 64
	DICTUGETREF
	PUSHCONT {
		NEWC
		ENDC
	}
	IFNOT
	SETGLOB 11
	; init wallet_public_key
	PUSHINT 3
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 12
	; init owner_address
	PUSHINT 4
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	IFNOT
	SETGLOB 13
	; init balance
	PUSHINT 0
	SETGLOB 14
	; init allowance_
	NULL
	SETGLOB 15
	; init receive_callback
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 16
	; init error_message_sender_is_not_my_owner
	PUSHINT 0
	SETGLOB 17
	; init error_not_enough_balance
	PUSHINT 0
	SETGLOB 18
	; init error_message_sender_is_not_my_root
	PUSHINT 0
	SETGLOB 19
	; init error_message_sender_is_not_good_wallet
	PUSHINT 0
	SETGLOB 20
	; init error_wrong_bounced_header
	PUSHINT 0
	SETGLOB 21
	; init error_wrong_bounced_args
	PUSHINT 0
	SETGLOB 22
	; init error_non_zero_remaining
	PUSHINT 0
	SETGLOB 23
	; init error_no_allowance_set
	PUSHINT 0
	SETGLOB 24
	; init error_wrong_spender
	PUSHINT 0
	SETGLOB 25
	; init error_not_enough_allowance
	PUSHINT 0
	SETGLOB 26
	; init error_low_message_value
	PUSHINT 0
	SETGLOB 27
	; init error_define_wallet_public_key_or_owner_address
	PUSHINT 0
	SETGLOB 28
	; init target_gas_balance
	PUSHINT 0
	SETGLOB 29
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: receive_callback
	;; address.makeAddrStd()
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 16
	;; init state var: error_message_sender_is_not_my_owner
	PUSHINT 100
	SETGLOB 17
	;; init state var: error_not_enough_balance
	PUSHINT 101
	SETGLOB 18
	;; init state var: error_message_sender_is_not_my_root
	PUSHINT 102
	SETGLOB 19
	;; init state var: error_message_sender_is_not_good_wallet
	PUSHINT 103
	SETGLOB 20
	;; init state var: error_wrong_bounced_header
	PUSHINT 104
	SETGLOB 21
	;; init state var: error_wrong_bounced_args
	PUSHINT 105
	SETGLOB 22
	;; init state var: error_non_zero_remaining
	PUSHINT 106
	SETGLOB 23
	;; init state var: error_no_allowance_set
	PUSHINT 107
	SETGLOB 24
	;; init state var: error_wrong_spender
	PUSHINT 108
	SETGLOB 25
	;; init state var: error_not_enough_allowance
	PUSHINT 109
	SETGLOB 26
	;; init state var: error_low_message_value
	PUSHINT 110
	SETGLOB 27
	;; init state var: error_define_wallet_public_key_or_owner_address
	PUSHINT 111
	SETGLOB 28
	;; init state var: target_gas_balance
	PUSHINT 100000000
	SETGLOB 29
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
PUSHCONT {
	PUSH S1
	LDSLICE 32
	NIP
	PUSHINT 1
	CALL 1
	CALL $c4_to_c7$
	;; param: body
	; function onBounce
	ACCEPT
	; expValue
	DUP
	; end expValue
	LDU 32
	; colValue
	POP S2
	; end colValue
	;; decl: functionId
	;; if
	;; push identifier functionId
	DUP
	PUSHINT 416421634
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S1
		; end expValue
		LDU 128
		; colValue
		POP S3
		; end colValue
		; expValue
		;; fetch balance
		GETGLOB 14
		; end expValue
		SWAP
		ADD
		UFITS 128
		; colValue
		SETGLOB 14
		; end colValue
		;; if
		;; get member value
		;; push identifier owner_address
		GETGLOB 13
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		PUSHCONT {
			;; push identifier target_gas_balance
			GETGLOB 29
			;; get member balance
			GETPARAM 7
			INDEX 0
			;; get member value
			CALL $message_balance_macro$
			;; -
			SUB
			UFITS 128
			MAX
			PUSHINT 2
			RAWRESERVE
			;; transfer()
			;; push identifier owner_address
			GETGLOB 13
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHINT 109
			STZEROES
			STSLICECONST 0
			STSLICECONST 0
			ENDC
			PUSHINT 128
			SENDRAWMSG
		}
		IF
		;; end if
	}
	PUSHCONT {
		;; if
		;; push identifier functionId
		DUP
		PUSHINT 844108033
		;; ==
		EQUAL
		PUSHCONT {
			; expValue
			PUSH S1
			; end expValue
			LDU 128
			; colValue
			POP S3
			; end colValue
			; expValue
			;; fetch balance
			GETGLOB 14
			; end expValue
			SWAP
			ADD
			UFITS 128
			; colValue
			SETGLOB 14
			; end colValue
			;; if
			;; get member value
			;; push identifier owner_address
			GETGLOB 13
			PARSEMSGADDR
			INDEX 3
			PLDU 256
			PUSHCONT {
				;; push identifier target_gas_balance
				GETGLOB 29
				;; get member balance
				GETPARAM 7
				INDEX 0
				;; get member value
				CALL $message_balance_macro$
				;; -
				SUB
				UFITS 128
				MAX
				PUSHINT 2
				RAWRESERVE
				;; transfer()
				;; push identifier owner_address
				GETGLOB 13
				NEWC
				STSLICECONST x62_
				STSLICE
				PUSHINT 109
				STZEROES
				STSLICECONST 0
				STSLICECONST 0
				ENDC
				PUSHINT 128
				SENDRAWMSG
			}
			IF
			;; end if
		}
		IF
		;; end if
	}
	IFELSE
	;; end if
	DROP2
	; end function onBounce
	CALL $c7_to_c4$
}
IFJMP
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
}
IF

.globl	balance
.public	balance
.type	balance, @function
CALL $c4_to_c7$
GETGLOB 14
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x866db788
PUSH S1
STUR 128
ENDC
PUSHINT 1
SENDRAWMSG
TRUE
SETGLOB 7

.globl	receive_callback
.public	receive_callback
.type	receive_callback, @function
CALL $c4_to_c7$
GETGLOB 16
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xe9974e48
PUSH S1
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
TRUE
SETGLOB 7

.globl	target_gas_balance
.public	target_gas_balance
.type	target_gas_balance, @function
CALL $c4_to_c7$
GETGLOB 29
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x9ae2890b
PUSH S1
STUR 128
ENDC
PUSHINT 1
SENDRAWMSG
TRUE
SETGLOB 7

